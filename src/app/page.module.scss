@use './page-variables' as *; // Specific variables for this page
@use '../styles/variables' as *;   // Global variables (fonts, colors, z-indexes etc.)

.desktopEntryButton {
  // Tailwind classes will handle most of the styling directly in JSX.
  // This module can hold styles not easily done with Tailwind or custom animations.
  animation: pulse 2s infinite;
  // If other non-Tailwind styles were on the element, they would go here.
  // For example: cursor: pointer; (though Tailwind's `cursor-pointer` is used)
}

@keyframes pulse {
  0%, 100% {
    opacity: 0.7;
    // transform: translateX(-50%) scale(1); // transform is handled by Tailwind
  }
  50% {
    opacity: 1;
    // transform: translateX(-50%) scale(1.05); // transform is handled by Tailwind
  }
}

// Styles for the main container of this page, if needed.
.homePageContainer {
  background-color: $primary-bg; // From global variables
  color: $text-primary-dark-bg;  // From global variables
  min-height: 100vh;
  position: relative;
  z-index: 0; // As per original inline style on the container div
}

.contentLayer {
    position: relative;
    z-index: $z-index-content-front; // Example of using a global z-index variable
}

.heroSection {
    // If bg-hero-pattern needs specific non-tailwind adjustments or fallback
    // background-image: url($hero-background-image); // $hero-background-image from _page-variables.scss
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat; 
    // Tailwind classes `bg-hero-pattern bg-cover bg-no-repeat bg-center` handle this mostly.
    // This is more for if you need to layer something or add pseudo-elements via SCSS.
} 
.canvas-loader {
  font-size: 10px;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  position: relative;
  text-indent: -9999em;
  animation: mulShdSpin 1.1s infinite ease;
  transform: translateZ(0);
}
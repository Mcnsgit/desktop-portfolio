/* styles/globals.scss - Cleaned Up Z-index Values and Layout */
:root {
    /* Consistent Taskbar Height */
    --taskbar-height: 30px;

    /* Z-index layers (harmonized with scss variables where sensible, prioritize CSS vars here) */
    /* These should be the single source of truth if used by JS or inline styles */
    --z-index-desktop-env: 20;
    --z-index-window-normal: 100;
    --z-index-window-active: 200;
    --z-index-taskbar: 500;
    --z-index-start-menu: 600;
    --z-index-dialog: 2500;
    --z-index-context-menu: 3000;
    --z-index-tooltip: 4000;
    --z-index-loading-screen: 9999;
        
    /* Base colors */
    --primary-bg: #050816;
    --secondary-bg: #151030;
    --text-primary: #ffffff;
    --text-secondary: #aaaaaa;
    --accent-color: #0078d7;
    --accent-color-1: #915eff;

    /* Windows 98 style colors */
    --win98-bg: #c0c0c0;
    --win98-border-light: #dfdfdf;
    --win98-border-dark: #808080;
    --win98-title-active: #000080;
    --win98-title-inactive: #808080;
    --win98-title-text: #ffffff;
    --win98-button-face: #c0c0c0;
    --win98-button-highlight: #ffffff;
    --win98-button-shadow: #808080;

    /* Shadows */
    --shadow-light: rgba(255, 255, 255, 0.8);
    --shadow-dark: rgba(0, 0, 0, 0.5);

    /* Spacing */
    --spacing-xs: 4px;
    --spacing-sm: 8px;
    --spacing-md: 16px;
    --spacing-lg: 24px;
    --spacing-xl: 32px;

    /* Border radius */
    --border-radius-sm: 2px;
    --border-radius-md: 4px;
    --border-radius-lg: 8px;
    /* Easing functions */
        --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
        --ease-out: cubic-bezier(0, 0, 0.2, 1);
        --ease-in: cubic-bezier(0.4, 0, 1, 1);

    /* Transitions */
    --transition-fast: 0.1s ease;
    --transition-normal: 0.2s ease;
    --transition-slow: 0.3s ease;

    /* Animation durations */
        --animation-fast: 150ms;
        --animation-normal: 250ms;
        --animation-slow: 350ms;
}

/* Global styles */
html,
body {
    margin: 0;
    padding: 0;
    font-family: 'MS Sans Serif', Arial, sans-serif;
    font-size: 14px;
    background-color: var(--win98-bg); /* Use CSS var */
    color: var(--text-primary); /* Default text color, might need adjustment for light bg */
    height: 100vh; /* Ensure html and body take full viewport height */
    width: 100vw;
    overflow: hidden; /* Prevent scrollbars on the body */
}

#__next {
    position: relative;
    width: 100%;
    height: 100%; /* Changed from 100vh to 100% to fill body */
    overflow: hidden;
}

/* Define the main desktop area, this class is used by Desktop.tsx's main div */
/* This rule should ideally be in Desktop.module.scss to avoid !important */
/* For now, let's define it here to ensure it's applied correctly */



/* Remove problematic .window overrides, let JS and react-draggable handle position/z-index */
/*
.window {
    top: 50px !important;
    z-index: 9999 !important;
    transform: translateZ(0) !important;
    position: absolute !important;
    display: block !important;
    visibility: visible !important;
}

.window[style] {
    top: 60px !important;
    z-index: var(--z-index-window-base) !important;
}

.window.active[style] {
    z-index: var(--z-index-window-active) !important;
}
*/

/* Taskbar styling should come from Taskbar.module.scss primarily */
/* This ensures taskbar is fixed at the bottom with correct height and z-index */
/* .taskbar selector here is generic, ensure it matches the one from Taskbar.module.scss if overriding */
/* For now, we assume Taskbar.module.scss handles its own styling correctly based on variables */
/* If Taskbar.module.scss uses SCSS vars, ensure they align with these CSS vars or update it */

/*
.taskbar {
    position: fixed !important;
    bottom: 0 !important;
    left: 0 !important;
    right: 0 !important;
    height: var(--taskbar-height) !important; 
    z-index: var(--z-index-taskbar) !important;
}
*/

/* Remove .window-container styles if not actively used or clarify its purpose */
/*
.window-container {
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: var(--taskbar-height) !important; 
    z-index: var(--z-index-window-base) !important;
    pointer-events: none;
}
.window-container>div {
    pointer-events: auto;
}
*/


/* Support for MS Sans Serif font */
@font-face {
    font-family: 'MS Sans Serif';
    src: url('/fonts/ms-sans-serif.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
}

/* .desktop-container was a duplicate of .desktop or an alternative, remove for clarity */
/*
.desktop-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: var(--taskbar-height); 
    overflow: hidden;
}
*/

/* Ensure the window content is visible - this should be handled by Window.module.scss */
/*
.windowContent {
    display: flex !important;
    flex-direction: column !important;
    height: 100% !important;
    width: 100% !important;
    overflow: hidden !important;
}
*/

/* Z-index for StartMenu should be handled in its own module or _variables.scss */
/*
.startMenu {
    z-index: var(--z-index-start-menu) !important;
}
*/

/* Context menu should be on top of everything - Handled by ContextMenu.module.scss */
/*
.contextMenu,
.rightClickMenu {
    z-index: var(--z-index-context-menu) !important;
}
*/

/* Fix window animations - should be handled by Window.module.scss */
/*
.window.maximizing,
.window.restoring {
    z-index: var(--z-index-window-active) !important;
}
*/

/* Ensure content areas are properly positioned - handled by Window.module.scss */
/*
.windowContent {
    position: relative;
    height: calc(100% - 24px);
    overflow: hidden;
}
*/

/* Other global styles from previous version if necessary */
/* Keep these minimal and prefer component-specific styles */
/*
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

.floating {
  animation: float 3s ease-in-out infinite;
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  .floating {
    animation: none;
  }
}

.window.minimizing,
.window.maximizing,
.window.restoring {
  transition: transform 0.3s var(--ease-in-out), opacity 0.3s var(--ease-in-out),
    width 0.3s var(--ease-in-out), height 0.3s var(--ease-in-out);
}
*/
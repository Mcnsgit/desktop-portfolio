@use '@/styles/variables' as v;

/* styles/globals.scss */
/* Window Styles */
.window {
  background-color: v.$win98-bg;
  border: 2px solid;
  @include v.win98-border();
  box-shadow: 2px 2px 5px v.$win98-button-shadow;
  position: absolute;
  overflow: hidden;
  will-change: transform, opacity;
  transform: translateZ(0);  /* Force GPU acceleration */
  backface-visibility: hidden;
  transition: transform v.$animation-duration-normal v.$ease-out,
  opacity v.$animation-duration-normal v.$ease-out;
  
}

.window.active {
  z-index: v.$z-index-window-active;
}

.window.dragging {
  transition: none !important;
  will-change: left, top;
}
.window.minimized {
  display: none;
}

.window-content {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}

.title-bar {
  background-color: v.$win98-title-inactive;
  color: v.$win98-title-text;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: v.$spacing-xs v.$spacing-sm;
  user-select: none;
  cursor: move;
}

.window.active .title-bar {
  background-color: v.$win98-title-active;
}

.title {
  font-weight: bold;
  font-size: 14px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.controls {
  display: flex;
  gap: v.$spacing-xs;
}

.control {
  background-color: v.$win98-button-face;
  border: 1px solid;
  @include v.win98-button-border();
  color: v.$win98-text-dark;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  padding: 0;
}

.control:active {
  @include v.win98-button-border($active: true);
}

.content {
  flex: 1;
  overflow: auto;
  padding: v.$spacing-sm;
  background-color: white;
}

.resize-handle {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16px;
  height: 16px;
  cursor: nwse-resize;
  background-image: linear-gradient(135deg,
      transparent 0%,
      transparent 50%,
      v.$win98-border-dark 50%,
      v.$win98-border-dark 60%,
      transparent 60%,
      transparent 70%,
      v.$win98-border-dark 70%,
      v.$win98-border-dark 80%,
      transparent 80%,
      transparent 90%,
      v.$win98-border-dark 90%,
      v.$win98-border-dark 100%);
}

/* Maximize animation */
@keyframes maximize {
  from {
    transform: scale(0.8);
    opacity: 0.8;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

.window.maximizing {
  transition: width v.$animation-duration-normal v.$ease-out,
              height v.$animation-duration-normal v.$ease-out,
              top v.$animation-duration-normal v.$ease-out,
              left v.$animation-duration-normal v.$ease-out;
}

.window.minimizing {
  transform: scale(0,8);
  opacity: 0;
transition: transform v.$animation-duration-normal v.$ease-in,
opacity v.$animation-duration-normal v.$ease-in;
}
/* Restore animation */
@keyframes restore {
  from {
    transform: scale(1.05);
  }

  to {
    transform: scale(1);
  }
}

.window.restoring {
  animation: restore 0.2s ease-out;
}
/* Classes for layout components */
.desktopContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 40px;
  /* Account for taskbar */
  z-index: v.$z-index-desktop-env;
}

.windowContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 40px;
  /* Account for taskbar */
  z-index: v.$z-index-window-normal;
  pointer-events: none;
  /* Allow clicking through the container */
}

.windowContainer>* {
  pointer-events: auto;
  /* Re-enable pointer events for children */
}



.taskbar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: v.$win98-taskbar-height;
  background-color: v.$win98-bg;
  border-top: 1px solid v.$win98-border-light;
  display: flex;
  align-items: center;
  z-index: v.$z-index-taskbar;
  transform: translateZ(0);
  /* Force GPU acceleration */
}

.taskbar .windowButton {
  transition: background-color v.$animation-duration-fast v.$ease-out;
  will-change: background-color;
  transform: translateZ(0);
}

/* 6. Use opacity for fade transitions instead of visibility for smoother animations */
.fadeIn {
  opacity: 0;
  animation: fadeIn v.$animation-duration-normal v.$ease-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeOut {
  opacity: 1;
  animation: fadeOut v.$animation-duration-normal v.$ease-in forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}
/* styles/globals.scss */
/* Window Styles */
.window {
  background-color: var(--win98-bg);
  border: 2px solid;
  border-color: var(--win98-border-light) var(--win98-border-dark) var(--win98-border-dark) var(--win98-border-light);
  box-shadow: 2px 2px 5px var(--shadow-dark);
  position: absolute;
  overflow: hidden;
  will-change: transform, opacity;
  transform: translateZ(0);  /* Force GPU acceleration */
  backface-visibility: hidden;
  transition: transform var(--animation-normal) var(--ease-out),
  opacity var(--animation-normal) var(--ease-out);
  
}

.window.active {
  z-index: var(--z-index-window-active);
}

.window.dragging {
  transition: none !important;
  will-change: left, top;
}
.window.minimized {
  display: none;
}

.window-content {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
}

.title-bar {
  background-color: var(--win98-title-inactive);
  color: var(--win98-title-text);
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  user-select: none;
  cursor: move;
}

.window.active .title-bar {
  background-color: var(--win98-title-active);
}

.title {
  font-weight: bold;
  font-size: 14px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.controls {
  display: flex;
  gap: var(--spacing-xs);
}

.control {
  background-color: var(--win98-button-face);
  border: 1px solid;
  border-color: var(--win98-border-light) var(--win98-border-dark) var(--win98-border-dark) var(--win98-border-light);
  color: var(--text-primary);
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  padding: 0;
}

.control:active {
  border-color: var(--win98-border-dark) var(--win98-border-light) var(--win98-border-light) var(--win98-border-dark);
}

.content {
  flex: 1;
  overflow: auto;
  padding: var(--spacing-sm);
  background-color: white;
}

.resize-handle {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 16px;
  height: 16px;
  cursor: nwse-resize;
  background-image: linear-gradient(135deg,
      transparent 0%,
      transparent 50%,
      var(--win98-border-dark) 50%,
      var(--win98-border-dark) 60%,
      transparent 60%,
      transparent 70%,
      var(--win98-border-dark) 70%,
      var(--win98-border-dark) 80%,
      transparent 80%,
      transparent 90%,
      var(--win98-border-dark) 90%,
      var(--win98-border-dark) 100%);
}

/* Maximize animation */
@keyframes maximize {
  from {
    transform: scale(0.8);
    opacity: 0.8;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

.window.maximizing {
  transition: width var(--animation-normal) var(--ease-out),
              height var(--animation-normal) var(--ease-out),
              top var(--animation-normal) var(--ease-out),
              left var(--animation-normal)var(--ease-out);
}

.window.minimizing {
  transform: scale(0,8);
  opacity: 0;
transition: transform var(--animation-normal) var(--ease-in),
opacity var(--animation-normal) var(--ease-in);
}
/* Restore animation */
@keyframes restore {
  from {
    transform: scale(1.05);
  }

  to {
    transform: scale(1);
  }
}

.window.restoring {
  animation: restore 0.2s ease-out;
}
/* Classes for layout components */
.desktopContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 40px;
  /* Account for taskbar */
  z-index: var(--z-index-desktop);
}

.windowContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 40px;
  /* Account for taskbar */
  z-index: var(--z-index-window);
  pointer-events: none;
  /* Allow clicking through the container */
}

.windowContainer>* {
  pointer-events: auto;
  /* Re-enable pointer events for children */
}



.taskbar {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 30px;
  background-color: #c0c0c0;
  border-top: 1px solid #dfdfdf;
  display: flex;
  align-items: center;
  z-index: var(--z-index-taskbar);
  transform: translateZ(0);
  /* Force GPU acceleration */
}

.taskbar .windowButton {
  transition: background-color var(--animation-fast) var(--ease-out);
  will-change: background-color;
  transform: translateZ(0);
}

/* 6. Use opacity for fade transitions instead of visibility for smoother animations */
.fadeIn {
  opacity: 0;
  animation: fadeIn var(--animation-normal) var(--ease-out) forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.fadeOut {
  opacity: 1;
  animation: fadeOut var(--animation-normal) var(--ease-in) forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}